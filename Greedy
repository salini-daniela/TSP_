pip install tsp

import pandas as pd
import numpy as np
import scipy.linalg as lin
import math
import time
import tsp

A= [[0, 493, 873, 736, 237, 381, 113, 603, 824, 612, 295, 850],
    [493, 0, 640, 961, 563, 301, 485, 209, 927, 435, 448, 658],
    [873, 640, 0, 544, 802, 951, 980, 161, 850, 166, 135, 257],
    [736, 961, 544, 0, 287, 848, 504, 754, 384, 924, 230, 875],
    [237, 563, 802, 287, 0, 926, 306, 719, 809, 262, 143, 910],
    [381, 301, 951, 848, 926, 0, 736, 222, 362, 92, 448, 741],
    [113, 485, 980, 504, 306, 736, 0, 455, 411, 908, 480, 273],
    [603, 209, 161, 754, 719, 222, 455, 0, 630, 270, 59, 316],
    [824, 927, 850, 384, 809, 362, 411, 630, 0, 710, 799, 269],
    [612, 435, 166, 924, 262, 92, 908, 270, 710, 0, 697, 457],
    [295, 448, 135, 230, 143, 448, 480, 59, 799, 697, 0, 686],
    [850, 658, 257, 875, 910, 741, 273, 316, 269, 457, 686, 0]]

A = pd.DataFrame(A).replace(0, np.nan)
A.stack().idxmin()
B=A.stack().idxmin()
print(B)

A
A.iloc[B[0],B[1]]
#Busca el minimo de distancia

B= [[0, 493, 873, 736, 237, 381, 113, 603, 824, 612, 295, 850],
    [493, 0, 640, 961, 563, 301, 485, 209, 927, 435, 448, 658],
    [873, 640, 0, 544, 802, 951, 980, 161, 850, 166, 135, 257],
    [736, 961, 544, 0, 287, 848, 504, 754, 384, 924, 230, 875],
    [237, 563, 802, 287, 0, 926, 306, 719, 809, 262, 143, 910],
    [381, 301, 951, 848, 926, 0, 736, 222, 362, 92, 448, 741],
    [113, 485, 980, 504, 306, 736, 0, 455, 411, 908, 480, 273],
    [603, 209, 161, 754, 719, 222, 455, 0, 630, 270, 59, 316],
    [824, 927, 850, 384, 809, 362, 411, 630, 0, 710, 799, 269],
    [612, 435, 166, 924, 262, 92, 908, 270, 710, 0, 697, 457],
    [295, 448, 135, 230, 143, 448, 480, 59, 799, 697, 0, 686],
    [850, 658, 257, 875, 910, 741, 273, 316, 269, 457, 686, 0]]
r = range(len(B))
# Dictionary of distance
dist = {(i, j): B [i][j] for i in r for j in r}
print(tsp.tsp(r, dist))

np.amin(A, axis=0)

q=A.loc[[0,1,2,3,4,5,6,7,8,9,10,11],0]
d=A.loc[[0,1,2,3,4,5,6,7,8,9,10,11],1]
